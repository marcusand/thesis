@startuml
!define LIGHTBLUE
!include ./style.puml

class Redux << (P, yellow) Provider>> {
  ~store
}

class App << (C, DeepSkyBlue) component>> {
  ~store
}

class Header << (C, DeepSkyBlue) component>> {
  ~store
}

class ErrorAlert << (C, DeepSkyBlue) component>> {
  ~store
}

class Router << (C, OrangeRed) container>> {
  ~store
}

Class Menu << (C, DeepSkyBlue) component>> {

}

Class MenuEntry << (C, DeepSkyBlue) component>> {

}

class ArticleModuleContainer << (C, OrangeRed) container>> {
}

class ArticleModule << (C, DeepSkyBlue) component>> {

}

class PhotoboxModuleContainer << (C, OrangeRed) container>> {
  ~store
}

class PhotoboxModule << (C, DeepSkyBlue) component>> {
  
}

class PhotoGallery << (C, DeepSkyBlue) component>> {

}

class TakePhoto << (C, DeepSkyBlue) component>> {

}

class DonationModuleContainer << (C, OrangeRed) container>> {
  ~store
}

class DonationModule << (C, DeepSkyBlue) component>> {
  
}

class SelectDonation << (C, DeepSkyBlue) component>> {

}

class Donate << (C, DeepSkyBlue) component>> {

}

class ContactModuleContainer << (C, OrangeRed) container>> {
  ~store
}

class ContactModule << (C, DeepSkyBlue) component>> {
  
}

class NotFound << (C, DeepSkyBlue) component>> {
  
}

Redux <..> App

App <..> Header
App <..> ErrorAlert
App <...> Router

Router -- Menu
Router -- ArticleModuleContainer
Router -- PhotoboxModuleContainer
Router -- DonationModuleContainer
Router -- ContactModuleContainer
Router -- NotFound

Menu -- MenuEntry

ArticleModuleContainer -- ArticleModule
ContactModuleContainer -- ContactModule
PhotoboxModuleContainer -- PhotoboxModule
DonationModuleContainer -- DonationModule

PhotoboxModule -- PhotoGallery
PhotoboxModule -- TakePhoto

DonationModule -- SelectDonation
DonationModule -- Donate

@enduml
' class ControlContainer << (C,OrangeRed) container>> {
'     ~store
'     ==methods==
'     +handleEvents()
' }

' class SweepContainer << (C,OrangeRed) container>> {
'     ~store
'     ==props==
'     # radius:number
'     # hubRadius: number
' }

' class Bezel << (C,DeepSkyBlue) component >> {
'     ==props==
'     # radius: number
' }

' class Display << (C,DeepSkyBlue) component >> {
'     ==props==
'     # svgHeight: number
'     # svgWidth: number
'     # diameter: number
'     # radius: number
'     # hubRadius: number
' }

' class Hub << (C,DeepSkyBlue) component >> {
'     ==props==
'     # radius:number
' }

' class Sweep << (C,DeepSkyBlue) component >> {
'     ==props==
'     #dim:object
' }

' class RadarControls << (C,DeepSkyBlue) component >> {
'     ==props==
'     # controls:array
'     # controlHandler()
'     ==methods==
'     +handleToggleEvents()
' }

' class Toggle << (C,DeepSkyBlue) component >> {
'     ==state==
'     # value
'     ==props==
'     # id: number
'     # label: string
'     # onClick()
' }

' class "StartStop:Toggle" << (C,lightblue) instance >>

' Redux <..> RadarContainer
' Redux <..> ControlContainer
' Redux <..> SweepContainer
' RadarContainer *-- SweepContainer
' RadarContainer *-- ControlContainer

' RadarContainer o-- Display

' Display o-- Bezel
' Display o-- Hub

' SweepContainer o-- Sweep

' ControlContainer o-- RadarControls
' ControlContainer "handleEvents" <.. "controlHandler" RadarControls
' RadarControls o-- Toggle
' RadarControls "handleToggleEvents" <.. "onClick" Toggle

' Toggle <|-- "StartStop:Toggle"